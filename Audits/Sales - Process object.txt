sale.order
{
	write_date={string=Last Updated on, type=datetime},
	message_partner_ids={string=Followers (Partners), type=many2many},
	invoice_ids={string=Invoices, type=many2many},
	validity_date={help=Manually set the expiration date of your quotation (offer), or it will set the date automatically based on the template if online quotation is installed., string=Expiration Date, type=date},
	amount_total={string=Total, type=monetary},
	team_id={string=Sales Team, type=many2one},
	message_channel_ids={string=Followers (Channels),
	type=many2many},
	payment_term_id={string=Payment Term, type=many2one},
	date_order={string=Order Date, type=datetime},
	project_id={help=The analytic account related to a sales order., string=Analytic Account, type=many2one},
	product_id={string=Product, type=many2one},
	id={string=ID, type=integer},
	state={string=Status, type=selection},
	create_date={help=Date on which sales order is created.,
	string=Creation Date, type=datetime},
	picking_policy={string=Shipping Policy, type=selection},
	__last_update={string=Last Modified on, type=datetime}, client_order_ref={string=Customer Reference, type=char}, pricelist_id={help=Pricelist for current sales order.,
	string=Pricelist, type=many2one},
	picking_ids={string=Picking associated to this sale, type=many2many},
	message_follower_ids={string=Followers, type=one2many},
	display_name={string=Display Name, type=char},
	create_uid={string=Created by, type=many2one},
	user_id={string=Salesperson, type=many2one},
	incoterm={help=International Commercial Terms are a series of predefined commercial terms used in international transactions.,
	string=Incoterms, type=many2one},
	name={string=Order Reference, type=char},
	partner_invoice_id={help=Invoice address for current sales order.,
	string=Invoice Address, type=many2one},
	partner_shipping_id={help=Delivery address for current sales order., string=Delivery Address, type=many2one},
	invoice_status={string=Invoice Status, type=selection},
	note={string=Terms and conditions, type=text}, write_uid={string=Last Updated by, type=many2one},
	message_is_follower={string=Is Follower, type=boolean},
	origin={help=Reference of the document that generated this sales order request., string=Source Document, type=char},
	fiscal_position_id={string=Fiscal Position, type=many2one},
	delivery_count={string=Delivery Orders, type=integer},
	message_unread={help=If checked new messages require your attention.,
	string=Unread Messages, type=boolean},
	partner_id={string=Customer, type=many2one},
	amount_tax={string=Taxes, type=monetary},
	amount_untaxed={string=Untaxed Amount, type=monetary},
	order_line={string=Order Lines, type=one2many},
	message_last_post={help=Date of the last message posted on the record.,
	string=Last Message Date, type=datetime},
	company_id={string=Company, type=many2one},
	invoice_count={string=# of Invoices, type=integer},
	message_unread_counter={help=Number of unread messages,
	string=Unread Messages Counter, type=integer},
	procurement_group_id={string=Procurement Group, type=many2one},
	message_needaction={help=If checked, new messages require your attention., string=Action Needed, type=boolean},
	message_needaction_counter={help=Number of messages which requires an action, string=Number of Actions, type=integer},
	message_ids={string=Messages, type=one2many},
	currency_id={help=, string=Currency, type=many2one},
	warehouse_id={string=Warehouse, type=many2one}
}

account.invoice
{
	write_date={string=Last Updated on, type=datetime},
	date={help=Keep empty to use the invoice date., string=Accounting Date, type=date},
	date_due={help=If you use payment terms, the due date will be computed automatically at the generation of accounting entries. The payment term may compute several due dates, for example 50% now and 50% in one month, but if you want to force a due date, make sure that the payment term is not set on the invoice. If you keep the payment term and the due date empty, it means direct payment., string=Due Date, type=date},
	message_partner_ids={string=Followers (Partners), type=many2many},
	amount_total={string=Total, type=monetary},
	residual={help=Remaining amount due., string=Amount Due, type=monetary},
	team_id={string=Sales Team, type=many2one},
	message_channel_ids={string=Followers (Channels), type=many2many},
	type={string=Type, type=selection}, invoice_line_ids={string=Invoice Lines, type=one2many},
	payment_term_id={help=If you use payment terms, the due date will be computed automatically at the generation of accounting entries. If you keep the payment term and the due date empty, it means direct payment. The payment term may compute several due dates, for example 50% now, 50% in one month., string=Payment Term, type=many2one},
	reference={help=The partner reference of this invoice., string=Vendor Reference, type=char},
	number={string=Number, type=char},
	payments_widget={string=Payments widget, type=text},
	move_name={help=Technical field holding the number given to the invoice, automatically set when the invoice is validated then stored to set the same number again if the invoice is cancelled, set to draft and re-validated., string=Journal Entry, type=char},
	amount_untaxed_signed={string=Untaxed Amount, type=monetary},
	partner_bank_id={help=Bank Account Number to which the invoice will be paid. A Company bank account if this is a Customer Invoice or Vendor Refund, otherwise a Partner bank account number., string=Bank Account, type=many2one},
	amount_total_signed={help=Total amount in the currency of the invoice, negative for credit notes., string=Total, type=monetary},
	id={string=ID, type=integer},
	state={string=Status, type=selection}, has_outstanding={string=Has outstanding, type=boolean}, create_date={string=Created on, type=datetime}, reconciled={help=It indicates that the invoice has been paid and the journal entry of the invoice has been reconciled with one or several journal entries of payment., string=Paid/Reconciled, type=boolean}, __last_update={string=Last Modified on, type=datetime}, date_invoice={help=Keep empty to use the current date, string=Invoice Date, type=date}, purchase_id={help=Encoding help. When selected, the associated purchase order lines are added to the vendor bill. Several PO can be selected., string=Add Purchase Order, type=many2one}, message_follower_ids={string=Followers, type=one2many}, create_uid={string=Created by, type=many2one}, display_name={string=Display Name, type=char}, sent={help=It indicates that the invoice has been sent., string=Sent, type=boolean}, residual_signed={help=Remaining amount due in the currency of the invoice., string=Amount Due, type=monetary}, user_id={string=Salesperson, type=many2one}, name={help=The name that will be used on account move lines, string=Reference/Description, type=char}, message_is_follower={string=Is Follower, type=boolean}, write_uid={string=Last Updated by, type=many2one}, outstanding_credits_debits_widget={string=Outstanding credits debits widget, type=text}, origin={help=Reference of the document that produced this invoice., string=Source Document, type=char}, fiscal_position_id={string=Fiscal Position, type=many2one}, amount_total_company_signed={help=Total amount in the currency of the company, negative for credit notes., string=Total, type=monetary}, residual_company_signed={help=Remaining amount due in the currency of the company., string=Amount Due, type=monetary}, payment_ids={string=Payments, type=many2many}, company_currency_id={string=Currency, type=many2one}, message_unread={help=If checked new messages require your attention., string=Unread Messages, type=boolean}, partner_id={string=Partner, type=many2one}, amount_tax={string=Tax, type=monetary}, amount_untaxed={string=Untaxed Amount, type=monetary}, move_id={help=Link to the automatically generated Journal Items., string=Journal Entry, type=many2one}, tax_line_ids={string=Tax Lines, type=one2many}, commercial_partner_id={help=The commercial entity that will be used on Journal Entries for this invoice, string=Commercial Entity, type=many2one}, message_last_post={help=Date of the last message posted on the record., string=Last Message Date, type=datetime}, journal_id={string=Journal, type=many2one}, company_id={string=Company, type=many2one}, payment_move_line_ids={string=Payments, type=many2many}, reference_type={string=Payment Reference, type=selection}, message_unread_counter={help=Number of unread messages, string=Unread Messages Counter, type=integer}, account_id={help=The partner account used for this invoice., string=Account, type=many2one}, incoterms_id={help=Incoterms are series of sales terms. They are used to divide transaction costs and responsibilities between buyer and seller and reflect state-of-the-art transportation practices., string=Incoterms, type=many2one}, message_needaction={help=If checked, new messages require your attention., string=Action Needed, type=boolean}, message_needaction_counter={help=Number of messages which requires an action, string=Number of Actions, type=integer}, comment={string=Additional Information, type=text}, message_ids={string=Messages, type=one2many}, currency_id={string=Currency, type=many2one}}

sale.advance.payment.inv
{
	write_date={string=Last Updated on, type=datetime},
	deposit_account_id={help=Account used for deposits, string=Income Account, type=many2one},
	write_uid={string=Last Updated by, type=many2one},
	amount={help=The amount to be invoiced in advance, taxes excluded., string=Down Payment Amount, type=float},
	__last_update={string=Last Modified on, type=datetime},
	advance_payment_method={string=What do you want to invoice?, type=selection},
	count={string=# of Orders, type=integer},
	create_uid={string=Created by, type=many2one},
	display_name={string=Display Name, type=char},
	product_id={string=Down Payment Product, type=many2one},
	deposit_taxes_id={help=Taxes used for deposits, string=Customer Taxes, type=many2many},
	id={string=ID, type=integer},
	create_date={string=Created on, type=datetime}
}

{write_date=2016-06-13 10:08:39, sale_line_ids=[Ljava.lang.Object;@29ca901e, write_uid=[Ljava.lang.Object;@5649fd9b, price_subtotal=185.19, price_subtotal_signed=185.19, origin=SO072, discount=0.0, company_currency_id=[Ljava.lang.Object;@6adede5, partner_id=[Ljava.lang.Object;@2d928643, product_id=[Ljava.lang.Object;@5025a98f, invoice_id=[Ljava.lang.Object;@49993335, id=1, create_date=2016-06-13 10:08:39, account_analytic_id=false, __last_update=2016-06-13 10:08:39, invoice_line_tax_ids=[Ljava.lang.Object;@20322d26, quantity=100.0, company_id=[Ljava.lang.Object;@192b07fd, purchase_id=false, create_uid=[Ljava.lang.Object;@64bfbc86, display_name=[BW01A] Lager Beer 0.25, price_unit=2.0, sequence=10, uom_id=[Ljava.lang.Object;@64bf3bbf, account_id=[Ljava.lang.Object;@55d56113, name=[BW01A] Lager Beer 0.25, purchase_line_id=false, currency_id=[Ljava.lang.Object;@148080bb}
Vitesse : 

Cable (getTuple) : 1719, 1424